@* @model PaginatonVM<IEnumerable<AuthorListVm>>
<div class="table-responsive">
    <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
        <thead>
        <th>Name</th>
        <th>Surname</th>
        <th colspan="2">Action</th>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @foreach (var item in Model.ite)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Surname</td>
                        <td class="text-center"><a class="btn btn-outline-info" asp-action="Update" asp-route-id="@item.Id">Update</a></td>
                        <td class="text-center"><a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a></td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-center" colspan="4">No data</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav style="display:flex;justify-content:center" aria-label="Page navigation example">
    <ul id="prod-pag" class="pagination">
        <li class="page-item  @(Model.HasPrev ? "" : "disabled background:red")"><a class='page-link' asp-action="ProductPagination" asp-route-page="@(Model.CurrentPage - 1)" asp-route-count="4">Previous</a></li>
        @for (int i = 1; i <= Model.LastPage; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="ProductPagination" asp-route-page="@i" asp-route-count="4">@i</a></li>
        }
        <li class="page-item @(Model.HasNext ? "" : "disabled")"><a class="page-link" asp-action="ProductPagination" asp-route-page="@(Model.CurrentPage + 1)" asp-route-count="4">Next</a></li>
    </ul>
</nav> *@